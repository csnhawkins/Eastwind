# This is a basic workflow to help you get started with Actions

name: Westwind GitHub Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "release" branch
  push:
    branches:
      - release
      - 'migrations/**'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  RELEASE_PREVIEW: 'Release-Preview.sql'
  BUILD_NAME: 'Build'
  REPORTS: 'Reports.html'
  REPORTS_DISPLAY_NAME: 'Reports'
  FLYWAY_DOCKER_IMAGE: redgate/flyway:latest-azure                                         #https://hub.docker.com/r/flyway/flyway
  FLYWAY_DOCKER_CONTAINER_NAME: flyway-container                                                #The name to provide to any Docker Container created
  FLYWAY_LICENSE_KEY: 'FL01404B039A4F4E0AA0943C07036C69D32E234CE5B368E0DC906B1FF4F4D822B118C26BAF5D4FC6657A9BBA5B07FD5DA3E4F89C20D4C32329D76C9FCFAEFD73821D507F7D9DC42C77BF6EBE0E737616AF40CEDA8751B167FC8D11D9B81442AB1F581152839C213774CA55022269B632573CE9105E397AED927630523D0DA476E36F16622ED6FF34ACC92E5F376536F085C54FCACFFFAFF29C338CB8573651219D8623B3712385FC632BFC1B5D230E8B1673C476615B4F48825EADD82F3CC2374BB7C85BB6357CBD30D09D12F44A963918E596B56532AE3C2A895F6978EBB296B327EFF9EE1435283FC059086C85F0FFDB09385EB475779D6E2FF195F3A7E8D1113E'
  FLYWAY_MIGRATIONS_PATH: $(GITHUB_WORKSPACE)/migrations
  FLYWAY_CONFIG_FILES: "$(GITHUB_WORKSPACE)"
  FLYWAY: docker run --rm -v "$FLYWAY_MIGRATIONS_PATH":/flyway/sql -v "$FLYWAY_CONFIG_FILES/$stage":/flyway/conf $FLYWAY_DOCKER_IMAGE flyway -user=$userName -password=$password -licenseKey=$FLYWAY_LICENSE_KEY

  # If the first undo script is U002, this will validate all undo scripts up to and including that
  FIRST_UNDO_SCRIPT: '002.20220421142139'
  # This number should always be just below the first migration script
  ABOVE_BASELINE_VERSION: '001.20220421100464'
  
  ACTIONS_RUNNER_DEBUG: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      stage: 'Build'
      databaseName: 'Eastwind_Build'
      JDBC: 'jdbc:sqlserver://azure-se-sql-database.database.windows.net:1433;encrypt=true;databaseName=Eastwind_Build'
      userName: 'Redgate'
      password: 'Redg@te1'
      displayName: 'Build'
      pauseForCodeReview: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
       # Runs the Flyway Clean command within a Docker Container against the Build database
      - name: Echo Commands
        if: ${{ true }}
        run: |
          echo "The Flyway Environment Variable is - Username is $userName - Password is $password - JDBC is $JDBC - And Flyway Command is $FLYWAY"
          echo $env

      # Runs the Flyway Clean command within a Docker Container against the Build database
      - name: Clean Build DB
        if: ${{ true }}
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE/migrations":/flyway/migrations -v "$GITHUB_WORKSPACE":/flyway/conf $FLYWAY_DOCKER_IMAGE flyway -user="$userName" -password="$password" -licenseKey="$FLYWAY_LICENSE_KEY" info clean info -url="$JDBC" -cleanDisabled='false'
        
      # Runs the Flyway Migrate command within a Docker Container against the Build database
      - name: Migrate Build DB
        if: ${{ true }}
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE/migrations":/flyway/migrations -v "$GITHUB_WORKSPACE":/flyway/conf $FLYWAY_DOCKER_IMAGE flyway -user="$userName" -password="$password" -licenseKey="$FLYWAY_LICENSE_KEY" info migrate info -url="$JDBC" -cleanDisabled='false'
          
      # Runs the Flyway Undo command within a Docker Container against the Build database
      - name: undo Build DB
        if: ${{ false }}
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE/migrations":/flyway/migrations -v "$GITHUB_WORKSPACE":/flyway/conf $FLYWAY_DOCKER_IMAGE flyway -user="$userName" -password="$password" -licenseKey="$FLYWAY_LICENSE_KEY" info undo info -url="$JDBC" -cleanDisabled='false'
      
  prod:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    env:
      stage: 'Prod'
      databaseName: 'Eastwind_Prod'
      JDBC: 'jdbc:sqlserver://azure-se-sql-database.database.windows.net:1433;encrypt=true;databaseName=Eastwind_Prod'
      displayName: 'Deploy Prod'
      pauseForCodeReview: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Test Script
        run: echo This is the Prod Stage

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
